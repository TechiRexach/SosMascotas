[{"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/index.js":"1","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/App.js":"2","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/reportWebVitals.js":"3","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/home/alertsHome.jsx":"4","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/home/buttonsHome.jsx":"5","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/status/alerts.jsx":"6","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/info/infoConsejos.jsx":"7","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/info/infoLinks.jsx":"8","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/userAnimals.jsx":"9","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/userComments.jsx":"10","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/contact/contact.jsx":"11","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/register/register.jsx":"12","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/login/login.jsx":"13","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/comment/comment.jsx":"14","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/alertForm/alertForm.jsx":"15","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/alert/alertView.jsx":"16","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/status/alertFound.jsx":"17","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/status/alertLost.jsx":"18","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/status/alertAtHome.jsx":"19","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/info/info.jsx":"20","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/userProfile.jsx":"21","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/constants/constant.jsx":"22","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/utility/authToken.jsx":"23","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/utility/privateRouter.jsx":"24","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/userPassword.jsx":"25","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/updateAnimal.jsx":"26","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/general/navbar.jsx":"27","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/general/footer.jsx":"28"},{"size":501,"mtime":1618489239516,"results":"29","hashOfConfig":"30"},{"size":2265,"mtime":1618818709984,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1618489239516,"results":"32","hashOfConfig":"30"},{"size":1917,"mtime":1618741303911,"results":"33","hashOfConfig":"30"},{"size":472,"mtime":1618489239476,"results":"34","hashOfConfig":"30"},{"size":1091,"mtime":1618674899603,"results":"35","hashOfConfig":"30"},{"size":2115,"mtime":1618489239478,"results":"36","hashOfConfig":"30"},{"size":3900,"mtime":1618489239478,"results":"37","hashOfConfig":"30"},{"size":4965,"mtime":1618824222098,"results":"38","hashOfConfig":"30"},{"size":4604,"mtime":1618824228640,"results":"39","hashOfConfig":"30"},{"size":472,"mtime":1618489239472,"results":"40","hashOfConfig":"30"},{"size":2854,"mtime":1618674899601,"results":"41","hashOfConfig":"30"},{"size":2254,"mtime":1618823969881,"results":"42","hashOfConfig":"30"},{"size":2690,"mtime":1618674899594,"results":"43","hashOfConfig":"30"},{"size":6659,"mtime":1618824208076,"results":"44","hashOfConfig":"30"},{"size":6768,"mtime":1618741295091,"results":"45","hashOfConfig":"30"},{"size":2910,"mtime":1618674899602,"results":"46","hashOfConfig":"30"},{"size":2905,"mtime":1618674899602,"results":"47","hashOfConfig":"30"},{"size":1092,"mtime":1618674899601,"results":"48","hashOfConfig":"30"},{"size":320,"mtime":1618489239477,"results":"49","hashOfConfig":"30"},{"size":4007,"mtime":1618824216131,"results":"50","hashOfConfig":"30"},{"size":249,"mtime":1618755517227,"results":"51","hashOfConfig":"30"},{"size":303,"mtime":1618489239517,"results":"52","hashOfConfig":"30"},{"size":677,"mtime":1618489239517,"results":"53","hashOfConfig":"30"},{"size":2453,"mtime":1618674899600,"results":"54","hashOfConfig":"30"},{"size":2101,"mtime":1618674899597,"results":"55","hashOfConfig":"30"},{"size":1528,"mtime":1618489239474,"results":"56","hashOfConfig":"30"},{"size":294,"mtime":1618489239473,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"5ld9cz",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/index.js",[],["124","125"],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/App.js",["126","127"],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/reportWebVitals.js",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/home/alertsHome.jsx",["128","129"],"import './home.css';\nimport HomeButtons from './buttonsHome.jsx';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport NavBar from '../general/navbar.jsx'\nimport moment from 'moment';\nimport 'moment/locale/es'\nimport { AUTH_TOKEN, HEROKU_URL, DEV_URL } from '../constants/constant.jsx'\n\n\nfunction AlertsHome (props) {\n\n    const [animales, setAnimales] = useState([]);\n    const [wellDone, setWellDone] = useState('');\n\n    useEffect(() => {\n        axios.get(`${HEROKU_URL}/animals`)\n        .then(animales => {\n            const animals = animales.data.Animals\n            const orderedAnimals = animals.sort(function (a, b) {\n                return new Date(b.fechaUsuario) - new Date(a.fechaUsuario)\n            })\n\n            setAnimales(orderedAnimals)\n            setWellDone(animales.data.message)\n        })\n    }, [])\n\n    return (\n        <div>\n            <NavBar />\n            <HomeButtons />\n        {wellDone && <p className=\"alert alert-secondary seeAll\">{wellDone}</p>}\n        <div className='alertsHome'>\n            {animales.map(animal => (\n                <Link key={animal._id} to={`/veranimal/${animal._id}`}>\n                    <div  className='form-control card mb-3 oneAlertHome'>\n                        <div className='card-body'>\n                            <div className='card-text'>{animal.status}</div>\n                            <div className='card-text'>{animal.species}</div>\n                            <div className='card-text'>{moment(animal.fechaUsuario).format('L')}</div>\n                        </div>\n                        <div className='col-md-4 photoAlertHome'>\n                            <img src={animal.photo} alt=\"Foto\" />\n                        </div>\n                    </div>\n                </Link>\n             ))}\n        </div>\n        </div>\n    );\n};\n\nexport default AlertsHome;","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/home/buttonsHome.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/status/alerts.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/info/infoConsejos.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/info/infoLinks.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/userAnimals.jsx",["130"],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/userComments.jsx",["131"],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/contact/contact.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/register/register.jsx",["132"],"import './register.css';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { AUTH_TOKEN, HEROKU_URL, DEV_URL } from '../constants/constant.jsx'\nimport { useHistory } from 'react-router-dom';\nimport setAuthToken from '../../utility/authToken';\nimport NavBar from '../general/navbar.jsx';\n\nfunction Register(){\n\n    const history = useHistory();\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const [welcome, setWelcome] = useState('');\n    const [newUser, setNewUser] = useState({\n        name: '',\n        lastname: '',\n        phone: '',\n        email: '',\n        password: ''\n    });\n\n    const handleChangeInputs = (event) => {\n        setNewUser({\n            ...newUser,\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    const enviarDatos = (event) => {\n        event.preventDefault()\n        axios.post(`${HEROKU_URL}/auth/signup`, {...newUser})\n        .then((response) => {\n            setWelcome(response.data.message)\n\n            const token = response.data.token;\n            localStorage.setItem(AUTH_TOKEN, token)\n            setAuthToken(token)\n\n            setTimeout(() => {\n                history.push('/myprofile')\n            }, 2000)\n        })\n        .catch((err) => {\n                setErrorMessage(err.response.data)\n                setTimeout(() => {\n                    setErrorMessage()\n                }, 2000)\n        })\n    };\n\n    return(\n        <div className='registerPage'>\n            <NavBar />\n            <p className='alert alert-secondary'>REGISTRATE</p>\n            {welcome && <div className='alert alert-success'>{welcome}</div>}\n            <form action=\"post\" className='registerForm' onSubmit={enviarDatos}>\n                <input className='form-control registerInputs one' type=\"text\" name=\"name\" value={newUser.name} placeholder='Nombre:' onChange={handleChangeInputs}/>\n                <input className='form-control registerInputs two' type=\"text\" name=\"lastname\" value={newUser.lastname} placeholder='Apellido:' onChange={handleChangeInputs}/>\n                <input className='form-control registerInputs three' type=\"number\" name=\"phone\" value={newUser.phone} placeholder='Teléfono:' onChange={handleChangeInputs}/>\n                <input className='form-control registerInputs four' type=\"email\" name=\"email\" value={newUser.email} placeholder='Email:'onChange={handleChangeInputs}/>\n                <input className='form-control registerInputs' type=\"password\" name=\"password\" value={newUser.password} placeholder='Contraseña:' onChange={handleChangeInputs}/>\n            </form>\n            {errorMessage && <div className='alert alert-danger'>{errorMessage}</div>}\n            <button className='btn btn-light registerButton' type='submit' onClick={enviarDatos}>Enviar</button>\n        </div>\n    );\n};\n\nexport default Register;","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/login/login.jsx",["133"],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/comment/comment.jsx",["134"],"import './comment.css'\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { AUTH_TOKEN, HEROKU_URL, DEV_URL } from '../constants/constant.jsx'\nimport { useHistory } from 'react-router-dom';\nimport NavBar from '../general/navbar.jsx'\n\n\nfunction NoToken(){\n    const history = useHistory()\n    const token = localStorage.getItem(AUTH_TOKEN)\n      \n        if(!token){\n            history.push('/login')\n        }\n}\n\nfunction AddComment(props){\n\n    NoToken()\n    const [errorMessage, setErrorMessage] = useState('');\n    const [wellDone, setCreatedComment] = useState('');\n\n    const [newComment, setNewComment] = useState({\n        animal: props.match.params.id,\n        text: '',\n        place: '',\n        fechaUsuario: ''\n    })\n\n    const handleChangeInput = (event) => { \n        setNewComment({\n            ...newComment,\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    const history = useHistory()\n\n    const createComment = (event) => {\n        event.preventDefault()\n\n        const token = localStorage.getItem(AUTH_TOKEN)\n        const config = {headers: {Authorization: `Bearer ${token}`}}\n\n\n        axios.post(`${HEROKU_URL}/addcomment`, {...newComment}, config)\n        .then((response) => {\n            setCreatedComment(response.data.message)\n\n            setTimeout(() => {\n                history.goBack()\n            }, 1000)\n\n        })\n        .catch((err) => {\n                setErrorMessage(err.response.data)\n                setTimeout(() => {\n                   setErrorMessage()\n                }, 2500)\n        })\n    };\n\n    return(\n        <div className='commentPage'>\n            <NavBar />\n            <p className='alert alert-secondary'>COMENTARIO</p>\n            <form action='post' className='addComment' onSubmit={createComment}>\n                {wellDone && <p className='alert alert-success createdComment'>{wellDone}</p>}\n                <input className='form-control inputPlaceComment' type=\"text\" name=\"place\" value={newComment.place} placeholder='Lugar:' onChange={handleChangeInput}/>\n                <input className='form-control inputDateComment' type=\"date\" name=\"fechaUsuario\" value={newComment.fechaUsuario} placeholder='Fecha:' onChange={handleChangeInput}/>\n                <textarea className='form-control inputTextComment' type=\"text\" name=\"text\" value={newComment.text} placeholder='Texto:' onChange={handleChangeInput}/>\n                <button className='btn btn-light buttonAddComment' onClick={createComment}>Enviar</button>\n                {errorMessage && <h3 className='alert alert-danger'>{errorMessage}</h3>}\n            </form>\n        </div>\n    );\n};\n\nexport default AddComment;","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/alertForm/alertForm.jsx",["135"],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/alert/alertView.jsx",["136"],"import './alertView.css'\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport NavBar from '../general/navbar.jsx';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport Modal from 'react-modal';\nimport { HEROKU_URL, DEV_URL } from '../constants/constant.jsx'\n\n\nfunction AlertView(props){\n\n    const [animal, setAnimal] = useState({});\n    const [formatDate, setFormatDate] = useState('');\n    const [comments, setComments] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [noComments, setNoComments] = useState('');\n   \n    const animalDate = moment(formatDate).format('L');\n\n    const [modalIsOpen, setIsOpen] = useState(false);\n    function openModal(){\n        setIsOpen(true)\n    \n    }\n    function closeModal(){\n        setIsOpen(false)\n    }\n\n    useEffect(() => {\n        axios.get(`${HEROKU_URL}/animals/${props.match.params.id}`)\n        .then(response => {\n            setFormatDate(response.data.animal.fechaUsuario)\n            setAnimal(response.data.animal)\n        })\n        .catch((err) => {\n            setErrorMessage(err.response)\n        })\n      }, [props.match.params.id])\n\n    \n    useEffect(() => {\n       \n        axios.get(`${HEROKU_URL}/comments/animal/` + props.match.params.id) \n        .then(response => {\n            setComments(response.data.comments)\n\n            if(response.data.comments.length <= 0){\n                setNoComments(response.data.message)\n            }\n        })\n        .catch((err) => {\n            setErrorMessage(err.response)\n        })\n    }, [props.match.params.id])\n\n    return(\n        <div>\n            <NavBar />\n            <div key={animal._id}>\n                <div key={animal.photo} className='alertViewPhoto'>\n                    <img src={animal.photo} alt=\"Foto\" className='photoAlertView' onClick={openModal}/>\n                    <div className='modalPhoto'>\n                        <Modal isOpen={modalIsOpen} onRequestClose={closeModal} className='modal-dialogPhoto' value={animal._id}>\n                            <div className='modal-content'>\n                                <button onClick={closeModal} className='btn-close'></button>\n                                <img src={animal.photo} alt=\"Foto\" className='photoAlertView'/>\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n                <div>\n                    <button className='btn btn-light alertViewButton'>\n                        <Link to={`/addcomment/${animal._id}`}>\n                            <p >¿Me has visto o me conoces?</p>\n                            <p className='bold'>¡Crea un comentario!</p> \n                        </Link>\n                    </button>\n                </div>\n                <div className='alertViewStatus'>\n                    <div className='alertViewType'>{animal.status}</div>\n                </div>\n                <div className='alertView'>\n                    <div className='alertViewAllInfo'>\n                        <table className='table table-hover'>\n                            <thead>\n                                <tr>\n                                    <th colSpan='2'>INFORMACIÓN</th>\n                                </tr>\n                            </thead>\n                        <tbody>\n                        <tr>\n                            <td className='bold'>Especie</td>\n                            <td>{animal.species}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Raza</td>\n                            <td>{animal.breed}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Color</td>\n                            <td>{animal.colour}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Sexo</td>\n                            <td>{animal.sex}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Lugar</td>\n                            <td>{animal.place}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Código Postal</td>\n                            <td>{animal.cp}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Fecha</td>\n                            <td>{animalDate}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Sujecciones</td>\n                            <td>{animal.fasteners}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Microchip</td>\n                            <td>{!animal.chip ? 'No tiene chip / No lo se' : 'Tiene chip'}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Chapa</td>\n                            <td>{!animal.idTag ? 'No lleva chapa' : 'Lleva chapa'}</td>\n                        </tr>\n                        <tr>\n                            <td className='bold'>Nombre</td>\n                            <td>{animal.name}</td>\n                        </tr>\n                        </tbody>\n                        </table>\n                    </div>\n                    <div className='form-control alertViewComments'>\n                        <p className='bold'>COMENTARIOS</p>\n                        {noComments && <div className='alert alert-warning'>{noComments}</div>}\n                        {comments.map(comment => (\n                            <div key={comment._id} className='form-control alertViewOneComment'>\n                                <div className='oneCommentInfo'>\n                                    <div>{comment.place}</div>\n                                    <div>{moment(comment.fechaUsuario).format('L')}</div>\n                                    <div>{comment.text}</div>\n                                    <hr/>\n                                    <div className='creatorUser'>{comment.creatorUser === null ? 'Este usuario ya no esta activo' : comment.creatorUser.name}</div>\n                                    <div className='creatorUser'>{comment.creatorUser === null ? '' : comment.creatorUser.email}</div>\n                                </div>\n                            </div>\n                        ))}\n                        {errorMessage && <div className='alert alert-danger'>{errorMessage}</div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default AlertView;","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/status/alertFound.jsx",["137","138"],"import AlertStatus from './alerts.jsx';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from '../general/navbar.jsx';\nimport { HEROKU_URL, DEV_URL } from '../constants/constant.jsx'\n\nfunction AlertFound(){\n    const [animals, setAnimals] = useState([]);\n    const [wellDone, setWellDone] = useState('');\n    const [postCode, setPostCode] = useState('');\n    const [noPostCode, setNoPostCode] = useState('');\n    const [animalsFiltered, setAnimalsFiltered] = useState([]);\n\n    //RELLENAR ARRAYS CON TODOS LOS ANIMALES. VAMOS A MODIFICAR SOLO LA \"DUPLICADA\" => ANIMALSFILTERED\n    useEffect(() => {\n        axios.get(`${HEROKU_URL}/found`)\n        .then(allFoundAnimals => {\n\n            const animals = allFoundAnimals.data.pets\n            const orderedAnimals = animals.sort(function (a, b) {\n                return new Date(b.fechaUsuario) - new Date(a.fechaUsuario)\n            })\n\n            setAnimals(orderedAnimals)\n            setWellDone(allFoundAnimals.data.message)\n            setAnimalsFiltered(orderedAnimals)\n        })\n      }, [])\n\n    //RECOGER VALOR INPUT CP\n    const handleChangeInput = (event) => {\n        event.preventDefault()\n        setPostCode(event.target.value)\n    }\n   \n    //APLICAR FILTRO\n    function filter(event){\n        event.preventDefault()\n\n        const filterApplied = animals.filter(animal => (animal.cp == postCode))\n        if(filterApplied.length === 0){\n            setAnimalsFiltered(animals)\n            setNoPostCode(\"No hay coincidencias\")\n            setPostCode('')\n\n            setTimeout(() => {\n                setNoPostCode()\n            }, 2000)\n        }\n        else{\n            setAnimalsFiltered(filterApplied)\n        }\n    }\n\n    //BORRAR FILTRO\n    const deleteFilter = (event)=> {\n        event.preventDefault()\n        setAnimalsFiltered(animals)\n        setPostCode('')\n    }\n\n\n    return(\n        <div>\n            <NavBar />\n            <div className='encontrados'>\n                {wellDone && <p className='alert alert-secondary seeAll'>{wellDone}</p>}\n                <div>\n                    <form className='loginForm cpFilter'>\n                        <input className='form-control inputCpFilter' name='cp' type=\"number\" placeholder='Código Postal' value={postCode} onChange={handleChangeInput}/>\n                        <button className='btn btn-light buttonCpFilter' type='submit' onClick={filter}>Filtrar</button>\n                        <div>\n                        {noPostCode && <p className='alert alert-danger noPostCode'>{noPostCode}</p>}\n                        </div>\n                    </form>\n                    <button className='btn btn-secondary deleteCpFilter' type='reset' onClick={deleteFilter}>Quitar filtro</button>\n                </div>\n            <AlertStatus animales={animalsFiltered}/>\n            </div>\n        </div>\n    )\n}\n\nexport default AlertFound;","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/status/alertLost.jsx",["139","140"],"import AlertStatus from './alerts.jsx';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from '../general/navbar.jsx';\nimport { HEROKU_URL, DEV_URL } from '../constants/constant.jsx'\n\nfunction AlertLost(){\n    const [animals, setAnimals] = useState([]);\n    const [wellDone, setWellDone] = useState('');\n    const [postCode, setPostCode] = useState('');\n    const [noPostCode, setNoPostCode] = useState('');\n    const [animalsFiltered, setAnimalsFiltered] = useState([]);\n    \n\n    //RELLENAR ARRAYS CON TODOS LOS ANIMALES. VAMOS A MODIFICAR SOLO LA \"DUPLICADA\" => ANIMALSFILTERED\n    useEffect(() => {\n        axios.get(`${HEROKU_URL}/lost`)\n        .then(allLostAnimals => {\n\n            const animals = allLostAnimals.data.pets\n            const orderedAnimals = animals.sort(function (a, b) {\n                return new Date(b.fechaUsuario) - new Date(a.fechaUsuario)\n            })\n\n            setAnimals(orderedAnimals)\n            setWellDone(allLostAnimals.data.message)\n            setAnimalsFiltered(orderedAnimals)\n        })\n    }, [])\n\n    //RECOGER VALOR INPUT CP\n    const handleChangeInput = (event) => {\n        event.preventDefault()\n        setPostCode(event.target.value)\n    }\n   \n    //APLICAR FILTRO\n    function filter(event){\n        event.preventDefault()\n\n        const filterApplied = animals.filter(animal => (animal.cp == postCode))\n        if(filterApplied.length === 0){\n            setAnimalsFiltered(animals)\n            setNoPostCode(\"No hay coincidencias\")\n            setPostCode('')\n\n            setTimeout(() => {\n                setNoPostCode()\n            }, 2000)\n        }\n        else{\n            setAnimalsFiltered(filterApplied)\n        }\n    }\n\n    //BORRAR FILTRO\n    const deleteFilter = (event)=> {\n        event.preventDefault()\n        setAnimalsFiltered(animals)\n        setPostCode('')\n    }\n \n\n    return(\n        <div>\n            <NavBar />\n            <div className='perdidos'>\n                {wellDone && <p className='alert alert-secondary seeAll'>{wellDone}</p>}\n                <div>\n                    <form className='loginForm cpFilter'>\n                        <input className='form-control inputCpFilter' name='cp' type=\"number\" placeholder='Código Postal' value={postCode} onChange={handleChangeInput}/>\n                        <button className='btn btn-light buttonCpFilter' type='submit' onClick={filter}>Filtrar</button>\n                        <div>\n                        {noPostCode && <p className='alert alert-danger noPostCode'>{noPostCode}</p>}\n                        </div>\n                    </form>\n                    <button className='btn btn-secondary deleteCpFilter' type='reset' onClick={deleteFilter}>Quitar filtro</button>\n                </div>\n            <AlertStatus animales={animalsFiltered}/>\n            </div>\n        </div>\n    )\n}\n\nexport default AlertLost;","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/status/alertAtHome.jsx",["141"],"import AlertStatus from './alerts.jsx';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from '../general/navbar.jsx';\nimport { HEROKU_URL, DEV_URL } from '../constants/constant.jsx'\n\nfunction AlertAtHome(){\n    const [animales, setAnimales] = useState([]);\n    const [wellDone, setWellDone] = useState('');\n\n    useEffect(() => {\n        axios.get(`${HEROKU_URL}/athome`)\n        .then(allHomeAnimals => {\n\n            const animals = allHomeAnimals.data.pets\n            const orderedAnimals = animals.sort(function (a, b) {\n                return new Date(b.fechaUsuario) - new Date(a.fechaUsuario)\n            })\n            setAnimales(orderedAnimals)\n            setWellDone(allHomeAnimals.data.message)\n        })\n      }, [])\n\n\n    return(\n        <div className='athomePage'>\n            <NavBar />\n            <div className='encasa'>\n                {wellDone && <p className='alert alert-secondary seeAll'>{wellDone}</p>}\n                <AlertStatus animales={animales}/>\n            </div>\n        </div>\n    )\n}\n\nexport default AlertAtHome;","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/info/info.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/userProfile.jsx",["142","143"],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/constants/constant.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/utility/authToken.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/utility/privateRouter.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/userPassword.jsx",["144"],"import './user.css';\nimport { AUTH_TOKEN, HEROKU_URL, DEV_URL } from '../constants/constant.jsx'\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport NavBar from '../general/navbar.jsx';\n\nfunction UserAccions(props){\n    \n    const history = useHistory()\n    \n    const [user, setUser] = useState({});\n    const [newPassword, setNewPassword] = useState('');\n    const [wellDone, setWellDone] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem(AUTH_TOKEN)\n        const config = {headers: {Authorization: `Bearer ${token}`}}\n\n        axios.get(`${HEROKU_URL}/users/myprofile`, config)\n        .then((response) => {\n            setUser(response.data.user)\n        })\n        .catch((error) => {\n            setErrorMessage(error.response.data)\n        })\n    },[])\n\n    const handleChangePassword = (event) => {\n        event.preventDefault()\n\n        const body = {\n            password: newPassword\n        }\n\n        const token = localStorage.getItem(AUTH_TOKEN)\n        const config = {headers: {Authorization: `Bearer ${token}`}}\n        axios.put(`${HEROKU_URL}/users/password/`, body, config)\n        .then(response => {\n            setWellDone(response.data.message)\n           \n            setTimeout(() => {\n                history.push('/myprofile')\n            }, 2000)\n        })\n        .catch(err => {\n            setErrorMessage(err.response.data)\n            setTimeout(() => {\n                setErrorMessage()\n            }, 2000)\n        })\n    }\n\n    return(\n        <div className='passwordPage'>\n            <NavBar />\n            <div className='changePasswordForm'>\n                {wellDone && <p className='alert alert-success changedPassword'>{wellDone}</p>}\n                <p className='alert alert-secondary'>{user.name}, introduce tu nueva contraseña:</p>\n                <input className='form-control inputNewPassword' id='newPassword' type=\"password\" placeholder='Nueva contraseña:' name='password' value={newPassword} onChange={(event) => setNewPassword(event.target.value)}/>\n                <button className='btn btn-light changePasswordButton' onClick={handleChangePassword} >Cambiar</button>\n                {errorMessage && <p className='alert alert-danger'>{errorMessage}</p>}\n            </div>\n        </div>\n    )\n}\n\nexport default UserAccions;","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/perfil/updateAnimal.jsx",["145"],"import { useState } from 'react';\nimport axios from 'axios';\nimport { AUTH_TOKEN, HEROKU_URL, DEV_URL } from '../constants/constant.jsx'\nimport { useHistory } from 'react-router-dom';\nimport NavBar from '../general/navbar.jsx'\n\n\nfunction UpdateAnimal(props){\n\n    const animalId = props.match.params.id\n    const history = useHistory()\n\n    const [newStatus, setnewStatus] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [wellDone, setWellDone] = useState('');\n\n    const handleChangeStatus = (event) => {\n        event.preventDefault()\n\n        const body = {\n            status: newStatus\n        }\n\n        const token = localStorage.getItem(AUTH_TOKEN)\n        const config = {headers: {Authorization: `Bearer ${token}`}}\n        axios.put(`${HEROKU_URL}/animal/${animalId}`, body, config)\n        .then(response => {\n            setWellDone(response.data.message)\n            setTimeout(() => {\n                history.push('/myprofile')\n            }, 2000)\n        })\n        .catch(err => {\n            setErrorMessage(err.response.data)\n\n            setTimeout(() => {\n                setErrorMessage()\n            }, 2500)\n        })\n    };\n\n    return(\n        <div className='updateAnimalPage'>\n            <NavBar />\n        <form className='updateForm'>\n            {wellDone && <p className='alert alert-success'>{wellDone}</p>}\n            <select className='form-select' type=\"text\" name=\"status\" onChange={(event) => setnewStatus(event.target.value)}>\n                <option value=\"tipoAviso\" defaultChecked>Actualizar estado</option>\n                <option value='Perdido' name='Perdido' >Perdido</option>\n                <option value='Encontrado' name='Encontrado' >Encontrado</option>\n                <option value='En casa' name='En casa' >En casa</option>\n            </select>\n            <button className='btn btn-light updateFormButton' onClick={handleChangeStatus}>Enviar</button>\n            {errorMessage && <p className='alert alert-danger'>{errorMessage}</p>}\n        </form>\n        </div>\n    );\n};\n\nexport default UpdateAnimal;","/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/general/navbar.jsx",[],"/Users/rexachgonzalez/Desktop/Let's Coder/PROYECTO 3/sosmascotas/client/src/components/general/footer.jsx",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":19},{"ruleId":"150","severity":1,"message":"154","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":13},{"ruleId":"150","severity":1,"message":"155","line":9,"column":10,"nodeType":"152","messageId":"153","endLine":9,"endColumn":20},{"ruleId":"150","severity":1,"message":"156","line":9,"column":34,"nodeType":"152","messageId":"153","endLine":9,"endColumn":41},{"ruleId":"150","severity":1,"message":"156","line":4,"column":34,"nodeType":"152","messageId":"153","endLine":4,"endColumn":41},{"ruleId":"150","severity":1,"message":"156","line":4,"column":34,"nodeType":"152","messageId":"153","endLine":4,"endColumn":41},{"ruleId":"150","severity":1,"message":"156","line":4,"column":34,"nodeType":"152","messageId":"153","endLine":4,"endColumn":41},{"ruleId":"150","severity":1,"message":"157","line":4,"column":22,"nodeType":"152","messageId":"153","endLine":4,"endColumn":32},{"ruleId":"150","severity":1,"message":"156","line":4,"column":34,"nodeType":"152","messageId":"153","endLine":4,"endColumn":41},{"ruleId":"150","severity":1,"message":"156","line":5,"column":34,"nodeType":"152","messageId":"153","endLine":5,"endColumn":41},{"ruleId":"150","severity":1,"message":"156","line":9,"column":22,"nodeType":"152","messageId":"153","endLine":9,"endColumn":29},{"ruleId":"150","severity":1,"message":"156","line":5,"column":22,"nodeType":"152","messageId":"153","endLine":5,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":40,"column":67,"nodeType":"160","messageId":"161","endLine":40,"endColumn":69},{"ruleId":"150","severity":1,"message":"156","line":5,"column":22,"nodeType":"152","messageId":"153","endLine":5,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":41,"column":67,"nodeType":"160","messageId":"161","endLine":41,"endColumn":69},{"ruleId":"150","severity":1,"message":"156","line":5,"column":22,"nodeType":"152","messageId":"153","endLine":5,"endColumn":29},{"ruleId":"150","severity":1,"message":"156","line":3,"column":34,"nodeType":"152","messageId":"153","endLine":3,"endColumn":41},{"ruleId":"162","severity":1,"message":"163","line":44,"column":7,"nodeType":"164","endLine":44,"endColumn":9,"suggestions":"165"},{"ruleId":"150","severity":1,"message":"156","line":2,"column":34,"nodeType":"152","messageId":"153","endLine":2,"endColumn":41},{"ruleId":"150","severity":1,"message":"156","line":3,"column":34,"nodeType":"152","messageId":"153","endLine":3,"endColumn":41},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'AUTH_TOKEN' is defined but never used.","'DEV_URL' is defined but never used.","'HEROKU_URL' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [history]",{"range":"171","text":"172"},[1347,1349],"[history]"]